@model SimpleWebStore.Models.BrowseProductsViewModel
@using PagedList.Mvc;
@using PagedList;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Browse products";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm(null,null, FormMethod.Get, new {@action = "/Products/"+Model.ActiveCategory+"/Page1"}))
{

    <div class="col-sm-3 col-md-3 pull-right">
        <form class="navbar-form" role="search">
            <div class="input-group">
                @Html.TextBox("search", "", new { @class = "form-control", placeholder = "Search for product" })
                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                </div>
            </div>
        </form>
    </div>
}

        <p style="padding-top:10px;">
            @Html.ActionLink("+ Add product", "Create", null, new { @class = "btn btn-primary" })
        </p>


        <div class="panel panel-default">

            <div id="tabs">

                <ul class="nav nav-pills">
                    <li class="@(Model.ActiveCategory.Equals("All") ? "active" : "")"><a onclick="location.href='@Url.Action("Index", new {category ="All", page = 1})'" data-toggle="pill" href="#all">All</a></li>

                    @foreach (var c in Model.Categories)
                    {
                        <li class="@(Model.ActiveCategory.Equals(c.CategoryName) ? "active" : "")"><a onclick="location.href='@Url.Action("Index", new {category =c.CategoryName, page = 1 })'" data-toggle="pill" href="#@Html.DisplayFor(model => c.CategoryName)">@Html.DisplayFor(model => c.CategoryName)</a></li>
                    }
                </ul>


                @if (Model.Search.Equals(""))
            {
                    <div class="tab-content">

                        <div id="all" class="@(Model.ActiveCategory.Equals("All") ? "tab-pane active" : "tab-pane")">

                            @Html.Action("_productsPartialView", new { category = "All", search = Model.Search })

                        </div>

                        @foreach (var c in Model.Categories)
                {
                            <div id="@Html.DisplayFor(model => c.CategoryName)" class="@(Model.ActiveCategory.Equals(c.CategoryName) ? "tab-pane active" : "tab-pane")">

                                @Html.Action("_productsPartialView", new { category = c.CategoryName, search = Model.Search})

                            </div>
                        }
                    </div>
                }
                else
                {

                <div id="searchh">       
                    @Html.Action("_productsPartialView", new { category = Model.ActiveCategory, search = Model.Search })
                </div>

                }



            </div>
        </div>


