@model SimpleWebStore.Models.Products

@{
    ViewBag.Title = "Edit product";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "required control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoriesId, "Category", new { @class = "required control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoriesId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoriesId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "required control-label col-md-2" })
            <div class="input-group col-md-4">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-group-addon">$</span>
            </div>
            <div class="col-md-10" style="margin-left:196px;">
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { cols = 70, @rows = 7, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Image)


        <div class="form-group">
            
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Image != null)
                {
                    <img src=@Url.Content("~/Content/Images/"+ @Html.DisplayFor(model => model.Image)) alt="some_text" class="img-responsive" width="150" height="150">
                }
               
                <br>
                <div class="editor-field">
                    <input type="file" name="productImg" />
                </div>
            </div>

        </div>
        <br>
       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    <ul class="pager">
        <li class="previous"><a href="@Url.Action("Index", "Products")"><span aria-hidden="true">&larr;</span> Back to products</a></li>
    </ul>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
